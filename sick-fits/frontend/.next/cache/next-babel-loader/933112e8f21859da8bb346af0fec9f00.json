{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\fullStack_project\\\\React\\\\Advanced-React\\\\sick-fits\\\\frontend\\\\components\\\\CreateProduct.js\";\nimport { useMutation } from '@apollo/client';\nimport useForm from '../lib/useForm';\nimport Form from './styles/Form';\nimport gql from 'graphql-tag';\nimport DisplayError from './ErrorMessage';\nimport { ALL_PRODUCTS_QUERY } from './Products';\nimport Router from 'next/router';\nconst CREATE_PRODUCT_MUTATION = gql`\nmutation CREATE_PRODUCT_MUTATION(\n    # Which variables are getting passed in? and what types are they\n    $name: String!\n    $description: String!\n    $price: Int!\n    $image: Upload\n){\n    createProduct(\n        data:{\n            name: $name\n            description: $description\n            price: $price\n            status: \"AVAILABLE\"\n            photo: {create: {image: $image, altText:$name}}\n        }\n    ){\n        id\n        price\n        description,\n        name\n    }\n}\n`;\nexport default function CreateProduct() {\n  const {\n    inputs,\n    handleChange,\n    resetForm,\n    clearForm\n  } = useForm({\n    image: '',\n    name: 'Nice Shoes',\n    price: 34243,\n    description: 'These are the best shoes!'\n  });\n  const [createProduct, {\n    loading,\n    error,\n    data\n  }] = useMutation(CREATE_PRODUCT_MUTATION, {\n    variables: inputs,\n    refetchQueries: [{\n      query: ALL_PRODUCTS_QUERY\n    }]\n  }); //console.log(createProduct);\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: async e => {\n      e.preventDefault(); //console.log(inputs);\n      // Submit the input filed to the backend:\n\n      const res = await createProduct();\n      clearForm(); // Go to that product page!\n\n      Router.push({\n        pathname: `/product/${res.data.createProduct.id}`\n      });\n    },\n    children: [/*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: loading,\n      \"aria-busy\": loading,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        children: [\"Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"image\",\n          name: \"image\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          placeholder: \"Name\",\n          value: inputs.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: [\"Price\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"price\",\n          name: \"price\",\n          placeholder: \"price\",\n          value: inputs.price,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          placeholder: \"description\",\n          value: inputs.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"+ Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["E:/fullStack_project/React/Advanced-React/sick-fits/frontend/components/CreateProduct.js"],"names":["useMutation","useForm","Form","gql","DisplayError","ALL_PRODUCTS_QUERY","Router","CREATE_PRODUCT_MUTATION","CreateProduct","inputs","handleChange","resetForm","clearForm","image","name","price","description","createProduct","loading","error","data","variables","refetchQueries","query","e","preventDefault","res","push","pathname","id"],"mappings":"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","sourcesContent":["import { useMutation } from '@apollo/client'\r\nimport useForm from '../lib/useForm';\r\nimport Form from './styles/Form'\r\nimport gql from 'graphql-tag'\r\nimport DisplayError from './ErrorMessage';\r\nimport { ALL_PRODUCTS_QUERY } from './Products';\r\nimport Router from 'next/router';\r\n\r\n\r\nconst CREATE_PRODUCT_MUTATION = gql`\r\nmutation CREATE_PRODUCT_MUTATION(\r\n    # Which variables are getting passed in? and what types are they\r\n    $name: String!\r\n    $description: String!\r\n    $price: Int!\r\n    $image: Upload\r\n){\r\n    createProduct(\r\n        data:{\r\n            name: $name\r\n            description: $description\r\n            price: $price\r\n            status: \"AVAILABLE\"\r\n            photo: {create: {image: $image, altText:$name}}\r\n        }\r\n    ){\r\n        id\r\n        price\r\n        description,\r\n        name\r\n    }\r\n}\r\n`;\r\n\r\nexport default function CreateProduct(){\r\n    const{inputs,handleChange,resetForm,clearForm} = useForm({\r\n        image:'',\r\n        name: 'Nice Shoes',\r\n        price: 34243,\r\n        description: 'These are the best shoes!'\r\n    });\r\n\r\n    const [createProduct, {loading,error,data}] = useMutation(\r\n        CREATE_PRODUCT_MUTATION,\r\n        {\r\n            variables: inputs,\r\n            refetchQueries:[{query: ALL_PRODUCTS_QUERY}],\r\n        }\r\n    )\r\n     //console.log(createProduct);\r\n    return(\r\n        <Form onSubmit={ async (e) => {\r\n            e.preventDefault();\r\n            //console.log(inputs);\r\n            // Submit the input filed to the backend:\r\n            const res = await createProduct();\r\n            clearForm()\r\n            // Go to that product page!\r\n            Router.push({\r\n                pathname:`/product/${res.data.createProduct.id}`,\r\n            })\r\n        }}\r\n        >\r\n            <DisplayError error={error} />\r\n            <fieldset disabled={loading} aria-busy={loading}>\r\n            <label htmlFor=\"image\">\r\n                Image\r\n                <input\r\n                type = \"file\"\r\n                id = \"image\"\r\n                name= \"image\"\r\n                onChange={handleChange}\r\n                />\r\n            </label>\r\n\r\n            <label htmlFor=\"name\">\r\n                Name\r\n                <input\r\n                type = \"text\"\r\n                id = \"name\"\r\n                name= \"name\"\r\n                placeholder=\"Name\"\r\n                value={inputs.name}\r\n                onChange={handleChange}\r\n                />\r\n            </label>\r\n\r\n            <label htmlFor=\"price\">\r\n                Price\r\n                <input\r\n                type = \"number\"\r\n                id = \"price\"\r\n                name= \"price\"\r\n                placeholder=\"price\"\r\n                value={inputs.price}\r\n                onChange={handleChange}\r\n                />\r\n            </label>\r\n\r\n            <label htmlFor=\"description\">\r\n                Description\r\n                <textarea\r\n                id = \"description\"\r\n                name= \"description\"\r\n                placeholder=\"description\"\r\n                value={inputs.description}\r\n                onChange={handleChange}\r\n                />\r\n            </label>\r\n\r\n            {/* <button type=\"button\" onClick={clearForm}>Clear Form</button>\r\n            <button type=\"button\" onClick={resetForm}>Reset Form</button> */}\r\n            <button type=\"submit\">+ Add Product</button>\r\n\r\n            </fieldset>\r\n        </Form>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}